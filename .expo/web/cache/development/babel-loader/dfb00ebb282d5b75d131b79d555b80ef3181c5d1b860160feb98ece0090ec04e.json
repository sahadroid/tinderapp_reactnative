{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Documents/testfullstack/myapp/screens/TinderClone.js\",\n  _this = this;\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { RecoilRoot } from 'recoil';\nimport { QueryClient, QueryClientProvider } from 'react-query';\nimport { MySQL } from 'mysql';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar connection = MySQL.createConnection({\n  host: 'localhost',\n  user: 'youruser',\n  password: 'yourpassword',\n  database: 'yourdatabase'\n});\nvar TinderClone = function TinderClone() {\n  return _jsxDEV(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    children: _jsxDEV(Text, {\n      children: \"Tinder Clone App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, _this);\n};\nexport default TinderClone;","map":{"version":3,"names":["React","View","Text","RecoilRoot","QueryClient","QueryClientProvider","MySQL","jsxDEV","_jsxDEV","connection","createConnection","host","user","password","database","TinderClone","style","flex","justifyContent","alignItems","children","fileName","_jsxFileName","lineNumber","columnNumber","_this"],"sources":["/Users/macbook/Documents/testfullstack/myapp/screens/TinderClone.js"],"sourcesContent":["import React from 'react';\nimport { View, Text } from 'react-native';\nimport { RecoilRoot } from 'recoil';\nimport { QueryClient, QueryClientProvider } from 'react-query';\nimport { MySQL } from 'mysql';\n\nconst connection = MySQL.createConnection({\n  host: 'localhost',\n  user: 'youruser',\n  password: 'yourpassword',\n  database: 'yourdatabase'\n});\n\nconst TinderClone = () => {\n  // Your component logic here\n\n  return (\n    <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n      <Text>Tinder Clone App</Text>\n    </View>\n  );\n};\n\nexport default TinderClone;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAE1B,SAASC,UAAU,QAAQ,QAAQ;AACnC,SAASC,WAAW,EAAEC,mBAAmB,QAAQ,aAAa;AAC9D,SAASC,KAAK,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,IAAMC,UAAU,GAAGH,KAAK,CAACI,gBAAgB,CAAC;EACxCC,IAAI,EAAE,WAAW;EACjBC,IAAI,EAAE,UAAU;EAChBC,QAAQ,EAAE,cAAc;EACxBC,QAAQ,EAAE;AACZ,CAAC,CAAC;AAEF,IAAMC,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAS;EAGxB,OACEP,OAAA,CAACP,IAAI;IAACe,KAAK,EAAE;MAAEC,IAAI,EAAE,CAAC;MAAEC,cAAc,EAAE,QAAQ;MAAEC,UAAU,EAAE;IAAS,CAAE;IAAAC,QAAA,EACvEZ,OAAA,CAACN,IAAI;MAAAkB,QAAA,EAAC;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,GAAAC,KAAM;EAAC;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,GAAAC,KACzB,CAAC;AAEX,CAAC;AAED,eAAeV,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}