{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/macbook/Documents/testfullstack/myapp/screens/SplashScreen.js\",\n  _this = this;\nimport React, { useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { useQuery } from 'react-query';\nimport { useNavigation } from '@react-navigation/native';\nimport { useRecoilState } from 'recoil';\nimport { useUserData } from '../hooks/useUserData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar SplashScreen = function SplashScreen() {\n  var _useUserData = useUserData(),\n    userData = _useUserData.data,\n    isLoading = _useUserData.isLoading,\n    isError = _useUserData.isError;\n  var _useRecoilState = useRecoilState(userState),\n    _useRecoilState2 = _slicedToArray(_useRecoilState, 2),\n    user = _useRecoilState2[0],\n    setUser = _useRecoilState2[1];\n  var navigation = useNavigation();\n  useEffect(function () {\n    if (!isLoading && !isError && userData) {\n      setUser(userData);\n      navigation.navigate('Home');\n    }\n  }, [userData, isLoading, isError]);\n  return _jsxDEV(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    children: [isLoading && _jsxDEV(Text, {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 21\n    }, _this), isError && _jsxDEV(Text, {\n      children: \"Error: Failed to load user data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 19\n    }, _this), user && _jsxDEV(Text, {\n      children: [\"Welcome, \", user.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 16\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, _this);\n};\nexport default SplashScreen;","map":{"version":3,"names":["React","useEffect","View","Text","Image","useQuery","useNavigation","useRecoilState","useUserData","jsxDEV","_jsxDEV","SplashScreen","_useUserData","userData","data","isLoading","isError","_useRecoilState","userState","_useRecoilState2","_slicedToArray","user","setUser","navigation","navigate","style","flex","justifyContent","alignItems","children","fileName","_jsxFileName","lineNumber","columnNumber","_this","name"],"sources":["/Users/macbook/Documents/testfullstack/myapp/screens/SplashScreen.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { View, Text, Image } from 'react-native';\nimport { useQuery } from 'react-query';\nimport { useNavigation } from '@react-navigation/native';\nimport { useRecoilState } from 'recoil';\nimport { useUserData } from '../hooks/useUserData';\n\nconst SplashScreen = () => {\n  const { data: userData, isLoading, isError } = useUserData();\n  const [user, setUser] = useRecoilState(userState);\n  const navigation = useNavigation();\n\n  useEffect(() => {\n    if (!isLoading && !isError && userData) {\n      setUser(userData);\n      navigation.navigate('Home');\n    }\n  }, [userData, isLoading, isError]);\n\n  return (\n    <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n      {isLoading && <Text>Loading...</Text>}\n      {isError && <Text>Error: Failed to load user data</Text>}\n      {user && <Text>Welcome, {user.name}</Text>}\n    </View>\n  );\n};\n\nexport default SplashScreen;\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,KAAA;AAEzC,SAASC,QAAQ,QAAQ,aAAa;AACtC,SAASC,aAAa,QAAQ,0BAA0B;AACxD,SAASC,cAAc,QAAQ,QAAQ;AACvC,SAASC,WAAW,QAAQ,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,IAAMC,YAAY,GAAG,SAAfA,YAAYA,CAAA,EAAS;EACzB,IAAAC,YAAA,GAA+CJ,WAAW,CAAC,CAAC;IAA9CK,QAAQ,GAAAD,YAAA,CAAdE,IAAI;IAAYC,SAAS,GAAAH,YAAA,CAATG,SAAS;IAAEC,OAAO,GAAAJ,YAAA,CAAPI,OAAO;EAC1C,IAAAC,eAAA,GAAwBV,cAAc,CAACW,SAAS,CAAC;IAAAC,gBAAA,GAAAC,cAAA,CAAAH,eAAA;IAA1CI,IAAI,GAAAF,gBAAA;IAAEG,OAAO,GAAAH,gBAAA;EACpB,IAAMI,UAAU,GAAGjB,aAAa,CAAC,CAAC;EAElCL,SAAS,CAAC,YAAM;IACd,IAAI,CAACc,SAAS,IAAI,CAACC,OAAO,IAAIH,QAAQ,EAAE;MACtCS,OAAO,CAACT,QAAQ,CAAC;MACjBU,UAAU,CAACC,QAAQ,CAAC,MAAM,CAAC;IAC7B;EACF,CAAC,EAAE,CAACX,QAAQ,EAAEE,SAAS,EAAEC,OAAO,CAAC,CAAC;EAElC,OACEN,OAAA,CAACR,IAAI;IAACuB,KAAK,EAAE;MAAEC,IAAI,EAAE,CAAC;MAAEC,cAAc,EAAE,QAAQ;MAAEC,UAAU,EAAE;IAAS,CAAE;IAAAC,QAAA,GACtEd,SAAS,IAAIL,OAAA,CAACP,IAAI;MAAA0B,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,GAAAC,KAAM,CAAC,EACpClB,OAAO,IAAIN,OAAA,CAACP,IAAI;MAAA0B,QAAA,EAAC;IAA+B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,GAAAC,KAAM,CAAC,EACvDb,IAAI,IAAIX,OAAA,CAACP,IAAI;MAAA0B,QAAA,GAAC,WAAS,EAACR,IAAI,CAACc,IAAI;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,GAAAC,KAAO,CAAC;EAAA;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,GAAAC,KACtC,CAAC;AAEX,CAAC;AAED,eAAevB,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}